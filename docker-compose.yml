
services:
  # üêò PostgreSQL Database
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: cosmetolog_bot
      POSTGRES_USER: cosmetolog
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres/db-data:/var/lib/postgresql/data
    # ‚úÖ –£–°–ò–õ–ï–ù–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –ó–î–û–†–û–í–¨–Ø
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cosmetolog -d cosmetolog_bot && psql -U cosmetolog -d cosmetolog_bot -c 'SELECT 1'"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 20s  # –£–≤–µ–ª–∏—á–∏–º –≤—Ä–µ–º—è –Ω–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
    networks:  # ‚Üê –î–û–ë–ê–í–ò–¢–¨ –°–ï–¢–¨ –î–õ–Ø –ë–ê–ó–´
      - app_network

  # ü§ñ –¢–≤–æ–π –±–æ—Ç
  bot:
    build: .                    # ‚Üê —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è –∏–∑ Dockerfile
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
      - ./texts:/app/texts
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - ADMIN_IDS=${ADMIN_IDS}
      - LANGUAGE=${LANGUAGE}
      - DATABASE_URL=${DATABASE_URL}
      - TZ=Asia/Yakutsk
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app_network

networks:
  app_network:
    driver: bridge